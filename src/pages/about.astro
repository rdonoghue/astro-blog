
---
const pageTitle = "About Me";

const identity = {
  firstName: "Sarah",
  country: "Canada",
  occupation: "Technical Writer",
  hobbies: ["photography", "birdwatching", "baseball"],
};

const skills = ["HTML", "CSS", "JavaScript", "React", "Astro", "Writing Docs"];

const happy = true;
const finished = false;
const goal = 3;
---

---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
    <title>{pageTitle}</title>
	</head>
	<body>
        <a href="/">Home</a>
<a href="/about/">About</a>
<a href="/blog/">Blog</a>

    <h1>{pageTitle}</h1>
        <h2>... and my new Astro site!</h2>

    <p>I am working through Astro's introductory tutorial. This is the second page on my website, and it's the first one I built myself!</p>

    <p>This site will update as I complete more of the tutorial, so keep checking back and see how my journey is going! (Probably don't)</p>

<h2>Notes:</h2>
<ul><li>huh.  The variable was inserted with single curly brackets, not double</li>
<li>{identity.firstName}</li></ul>

<p>Ok, apparently you can map a list?  Like so</p>
<ul>
  {skills.map((skill) => <li>{skill}</li>)}</ul>

  <p>Can I pull out a list item? {skills[1]}</p>
  <p>I can!  Noice!</p>

  <p>Ok, this next bit is some sort of variable trickery.
    <pre>
        const happy = true;
        const finished = false;
        const goal = 3;</pre>
        So, I infer, we'll see the true message, not the false message, then the "goal in in 3 days?"
  </p>
  {happy && <p>I am happy to be learning Astro!</p>}

{finished && <p>I finished this tutorial!</p>}

{goal === 3 ? <p>My goal is to finish in 3 days.</p> : <p>My goal is not 3 days.</p>}

<p>
    So:
    <pre>
        variable && output              Checks for truth
        variable === value ? output     Checks for a value, outputs if correct
    </pre>
</p>
	</body>
</html>
